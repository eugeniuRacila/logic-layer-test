@using Driver.Services
@using Newtonsoft.Json
@using Driver.Models
@using Driver.Services.order

@inject HttpClient HttpClient;
@inject IWebSocketService WebSocketService;
@inject AbstractOrderService OrderService;
@inject NavigationManager NavigationManager

<Router AppAssembly="@typeof(Program).Assembly">
    <Found Context="routeData">
        <AppRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
    </Found>
    <NotFound>
        @{ 
            // redirect to home page if not found
            NavigationManager.NavigateTo(""); 
        }
    </NotFound>
</Router>

@code
{
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Task.Run(() => WebSocketService.InitializeWebSocketsAsync());
        
        // Initial orders fetch
        var receivedOrdersJson = await HttpClient.GetStringAsync("api/orders");
        var receivedOrders =  JsonConvert.DeserializeObject<List<Order>>(receivedOrdersJson);
        
        OrderService.InitializeOrdersPool(receivedOrders);
    }
}
